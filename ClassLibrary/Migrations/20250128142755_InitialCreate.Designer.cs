// <auto-generated />
using System;
using ClassLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250128142755_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassLibrary.Models.CalculationRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("Num1")
                        .HasColumnType("float");

                    b.Property<double?>("Num2")
                        .HasColumnType("float");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("Result")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CalculationRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Num1 = 15.0,
                            Num2 = 5.0,
                            Operation = "-",
                            Result = 10.0
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Num1 = 9.0,
                            Num2 = 3.0,
                            Operation = "*",
                            Result = 27.0
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 1, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Num1 = 20.0,
                            Num2 = 4.0,
                            Operation = "/",
                            Result = 5.0
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 1, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Num1 = 8.0,
                            Num2 = 2.0,
                            Operation = "+",
                            Result = 10.0
                        });
                });

            modelBuilder.Entity("ClassLibrary.Models.GameRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComputerMove")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("ComputerWinRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlayerMove")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("UserWinRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("GameRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComputerMove = "Scissors",
                            ComputerWinRate = 0.0,
                            GameDate = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PlayerMove = "Rock",
                            Result = "Win",
                            UserWinRate = 100.0
                        },
                        new
                        {
                            Id = 2,
                            ComputerMove = "Rock",
                            ComputerWinRate = 25.0,
                            GameDate = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PlayerMove = "Paper",
                            Result = "Win",
                            UserWinRate = 75.0
                        },
                        new
                        {
                            Id = 3,
                            ComputerMove = "Rock",
                            ComputerWinRate = 50.0,
                            GameDate = new DateTime(2023, 1, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PlayerMove = "Scissors",
                            Result = "Loss",
                            UserWinRate = 50.0
                        });
                });

            modelBuilder.Entity("ClassLibrary.Models.ShapeRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<DateTime>("CalculationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Parameters")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Perimeter")
                        .HasColumnType("float");

                    b.Property<string>("ShapeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ShapeRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = 72.0,
                            CalculationDate = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Parameters = "Width: 6, Height: 12",
                            Perimeter = 36.0,
                            ShapeName = "Rectangle"
                        },
                        new
                        {
                            Id = 2,
                            Area = 40.0,
                            CalculationDate = new DateTime(2023, 1, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Parameters = "Base: 8, Height: 5",
                            Perimeter = 26.0,
                            ShapeName = "Parallelogram"
                        },
                        new
                        {
                            Id = 3,
                            Area = 10.5,
                            CalculationDate = new DateTime(2023, 1, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Parameters = "Base: 7, Height: 3",
                            Perimeter = 20.0,
                            ShapeName = "Triangle"
                        },
                        new
                        {
                            Id = 4,
                            Area = 24.0,
                            CalculationDate = new DateTime(2023, 1, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Parameters = "Diagonal1: 6, Diagonal2: 8",
                            Perimeter = 28.0,
                            ShapeName = "Rhombus"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
